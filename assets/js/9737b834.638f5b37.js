(self.webpackChunkflux_website=self.webpackChunkflux_website||[]).push([[340],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),h=a,y=d["".concat(c,".").concat(h)]||d[h]||u[h]||i;return n?r.createElement(y,o(o({ref:t},s),{},{components:n})):r.createElement(y,o({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4651:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={id:"dispatcher",title:"Dispatcher"},l=void 0,c={unversionedId:"dispatcher",id:"dispatcher",isDocsHomePage:!1,title:"Dispatcher",description:"Dispatcher is used to broadcast payloads to registered callbacks. This is",source:"@site/../docs/Dispatcher.md",sourceDirName:".",slug:"/dispatcher",permalink:"/flux/docs/dispatcher",editUrl:"https://github.com/facebook/flux/edit/master/docs/../docs/Dispatcher.md",version:"current",lastUpdatedBy:"Yangshun Tay",lastUpdatedAt:1562298457,formattedLastUpdatedAt:"7/4/2019",frontMatter:{id:"dispatcher",title:"Dispatcher"},sidebar:"docs",previous:{title:"In-Depth Overview",permalink:"/flux/docs/in-depth-overview"},next:{title:"Flux Utils",permalink:"/flux/docs/flux-utils"}},p=[{value:"API",id:"api",children:[]},{value:"Example",id:"example",children:[]}],s={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Dispatcher is used to broadcast payloads to registered callbacks. This is\ndifferent from generic pub-sub systems in two ways:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Callbacks are not subscribed to particular events. Every payload is\ndispatched to every registered callback."),(0,i.kt)("li",{parentName:"ul"},"Callbacks can be deferred in whole or part until other callbacks have\nbeen executed.")),(0,i.kt)("p",null,"Check out ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebook/flux/blob/master/src/Dispatcher.js"},"Dispatcher.js")," for the source code."),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"register(function callback): string")),"\nRegisters a callback to be invoked with every dispatched payload. Returns a token that can be used with ",(0,i.kt)("inlineCode",{parentName:"p"},"waitFor()"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"unregister(string id): void")),"\nRemoves a callback based on its token.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"waitFor(array<string> ids): void")),"\nWaits for the callbacks specified to be invoked before continuing execution of the current callback. This method should only be used by a callback in response to a dispatched payload.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"dispatch(object payload): void"))," Dispatches a payload to all registered callbacks.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"isDispatching(): boolean"))," Is this Dispatcher currently dispatching."))),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"For example, consider this hypothetical flight destination form, which\nselects a default city when a country is selected:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var flightDispatcher = new Dispatcher();\n\n// Keeps track of which country is selected\nvar CountryStore = {country: null};\n\n// Keeps track of which city is selected\nvar CityStore = {city: null};\n\n// Keeps track of the base flight price of the selected city\nvar FlightPriceStore = {price: null};\n")),(0,i.kt)("p",null,"When a user changes the selected city, we dispatch the payload:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"flightDispatcher.dispatch({\n  actionType: 'city-update',\n  selectedCity: 'paris'\n});\n")),(0,i.kt)("p",null,"This payload is digested by ",(0,i.kt)("inlineCode",{parentName:"p"},"CityStore"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"flightDispatcher.register(function(payload) {\n  if (payload.actionType === 'city-update') {\n    CityStore.city = payload.selectedCity;\n  }\n});\n")),(0,i.kt)("p",null,"When the user selects a country, we dispatch the payload:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"flightDispatcher.dispatch({\n  actionType: 'country-update',\n  selectedCountry: 'australia'\n});\n")),(0,i.kt)("p",null,"This payload is digested by both stores:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"}," CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n  if (payload.actionType === 'country-update') {\n    CountryStore.country = payload.selectedCountry;\n  }\n});\n")),(0,i.kt)("p",null,"When the callback to update ",(0,i.kt)("inlineCode",{parentName:"p"},"CountryStore")," is registered, we save a reference\nto the returned token. Using this token with ",(0,i.kt)("inlineCode",{parentName:"p"},"waitFor()"),", we can guarantee\nthat ",(0,i.kt)("inlineCode",{parentName:"p"},"CountryStore")," is updated before the callback that updates ",(0,i.kt)("inlineCode",{parentName:"p"},"CityStore"),"\nneeds to query its data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n  if (payload.actionType === 'country-update') {\n    // `CountryStore.country` may not be updated.\n    flightDispatcher.waitFor([CountryStore.dispatchToken]);\n    // `CountryStore.country` is now guaranteed to be updated.\n\n    // Select the default city for the new country\n    CityStore.city = getDefaultCityForCountry(CountryStore.country);\n  }\n});\n")),(0,i.kt)("p",null,"The usage of ",(0,i.kt)("inlineCode",{parentName:"p"},"waitFor()")," can be chained, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"FlightPriceStore.dispatchToken =\n  flightDispatcher.register(function(payload) {\n    switch (payload.actionType) {\n      case 'country-update':\n      case 'city-update':\n        flightDispatcher.waitFor([CityStore.dispatchToken]);\n        FlightPriceStore.price =\n          getFlightPriceStore(CountryStore.country, CityStore.city);\n        break;\n  }\n});\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"country-update")," payload will be guaranteed to invoke the stores'\nregistered callbacks in order: ",(0,i.kt)("inlineCode",{parentName:"p"},"CountryStore"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"CityStore"),", then\n",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPriceStore"),"."))}u.isMDXComponent=!0}}]);